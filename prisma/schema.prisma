generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id         String @id @default(uuid())
  erpNumber  Int    @unique
  erpStatus  String
  shopNumber String
  shop       String
  date       String

  discounts     Float
  totalShipping Float
  totalProducts Float
  totalOrder    Float

  observations         String
  internalObservations String

  integrationType String

  client Client? @relation(fields: [clientId], references: [id])

  invoiceAccessKey String
  invoiceNumber    Int
  invoiceSerie     Int

  items Item[]

  transport    String
  trackingCode String

  label   String
  invoice String

  status Status[]
  alerts Alert[]

  clientId  String?
  invoiceId String?

  transportId String?

  @@map("orders")
}

model Client {
  id         String @id @default(uuid())
  internalId String @unique
  name       String
  cnpj       String
  ie         String
  rg         String
  phone      String
  cell       String
  email      String

  Order Order[]

  @@map("clients")
}

model Item {
  id      String @id @default(uuid())
  sku     String
  name    String
  amount  Int
  gtin    String
  Order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  @@map("items")
}

model Alert {
  id      String   @id @default(uuid())
  message String
  addedAt DateTime @default(now())
  Order   Order?   @relation(fields: [orderId], references: [id])
  orderId String?
}

model Status {
  id           String     @id @unique
  status       StatusList
  observations String
  changedAt    DateTime

  Order   Order?  @relation(fields: [orderId], references: [id])
  orderId String?
}

enum StatusList {
  PENDING
  PAID
  LABEL_ATTACHED
  INVOICE_ATTACHED
  WAITING_PROCCESS
  IN_SEPARATION
  IN_CONFERENCE
  SENT
  DELIVERED
  CANCELLED
  RETURNED
}
